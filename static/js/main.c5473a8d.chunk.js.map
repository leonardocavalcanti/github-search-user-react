{"version":3,"sources":["store/index.js","Api.js","services/SearchHistoryService.js","components/User/index.js","components/User/User.js","services/RepositoryService.js","components/UserSearchItem/index.js","components/UserSearchItem/UserSearchItem.js","components/UserSearch/index.js","components/UserSearch/UserSearch.js","services/UserService.js","App.js","serviceWorker.js","store/users/actions.js","store/users/reducers.js","store/repositories/actions.js","store/repositories/reducers.js","store/rootReducer.js","store/rootActions.js","index.js"],"names":["ActionsContext","createContext","StoreContext","useActions","useContext","useStore","api","axios","create","baseURL","put","search","searchHistory","localStorage","getItem","searchHistoryArray","JSON","parse","find","s","login","get","avatar_url","responseType","then","result","arrayBuffer","data","btoa","reduce","call","Uint8Array","p","c","String","fromCharCode","push","length","splice","setItem","stringify","User","props","user","state","usersActions","repositoriesActions","useState","totalSize","setTotalSize","totalIssues","setTotalIssues","languages","setLanguages","loading","setLoading","setTotals","items","size","issues","forEach","item","open_issues_count","languageName","language","l","name","count","useEffect","isFromHistory","set","repositories","r","searchHistoryService","className","key","src","alt","bio","location","map","i","UserSearchItem","selectUser","onClick","UserSearch","inputRef","useRef","query","setQuery","select","selectUserFromHistory","q","users","type","ref","input","current","value","App","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","USERS_SET","USERS_SELECT","payload","initialState","REPOSITORIES_SET","REPOSITORIES_SELECT","repository","combineReducers","action","rootActions","dispatch","bindActionCreators","ReactDOM","render","rootReducer","initialValue","useReducer","actions","useMemo","Provider","children","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"goBAEMA,EAAiBC,0BACjBC,EAAeD,0BAERE,EAAa,kBAAMC,qBAAWJ,IAC9BK,EAAW,kBAAMD,qBAAWF,I,QCA1BI,E,OAJHC,EAAMC,OAAO,CACxBC,QAAS,2BCDH,SAASC,EAAIC,GAChB,IAAIC,EAAgBC,aAAaC,QAAQ,iBAErCC,EAAqBC,KAAKC,MAAML,GAAiB,MAEpCG,EAAmBG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,QAAUT,EAAOS,UAG7Dd,EAAIe,IAAIV,EAAOW,WAAY,CACvBC,aAAc,gBAEbC,MAAK,SAAUC,GAqB5B,IAAsBC,EApBNf,EAAOW,YAoBDI,EApB2BD,EAAOE,KAuB7C,0BAFUC,KAAK,GAAGC,OAAOC,KAAK,IAAIC,WAAWL,IAAc,SAAUM,EAAGC,GAAK,OAAOD,EAAIE,OAAOC,aAAaF,KAAM,MApB7GlB,EAAmBqB,KAAKzB,GAEpBI,EAAmBsB,OAAS,GAC5BtB,EAAmBuB,OAAO,EAAG,GAGjCzB,aAAa0B,QAAQ,gBAAiBvB,KAAKwB,UAAUzB,O,WCnBtD0B,MCGA,SAAcC,GAAQ,IAC5BC,EAASD,EAATC,KACAC,EAAUvC,IAAVuC,MAF2B,EAGWzC,IAAtC0C,EAH2B,EAG3BA,aAAcC,EAHa,EAGbA,oBAHa,EAKDC,mBAAS,GALR,mBAK5BC,EAL4B,KAKjBC,EALiB,OAMGF,mBAAS,GANZ,mBAM5BG,EAN4B,KAMfC,EANe,OAODJ,mBAAS,IAPR,mBAO5BK,EAP4B,KAOjBC,EAPiB,OAQLN,oBAAS,GARJ,mBAQ5BO,EAR4B,KAQnBC,EARmB,KAoCnC,SAASC,EAAUC,GAClB,IAAIC,EAAO,EACPC,EAAS,EACTP,EAAY,GAEhBK,EAAMG,SAAQ,SAAAC,GACbH,GAAQG,EAAKH,KACbC,GAAUE,EAAKC,kBAEf,IAAIC,EAAeF,EAAKG,UAAY,SAEhCA,EAAWZ,EAAUlC,MAAK,SAAA+C,GAAC,OAAIA,EAAEC,OAASH,KAEzCC,EAGJA,EAASG,OAAS,EAFlBf,EAAUhB,KAAK,CAAE8B,KAAMH,EAAcI,MAAO,OAM9ClB,EAAaS,GACbP,EAAeQ,GACfN,EAAaD,GAGd,OAnDAgB,qBAAU,WCbJ,IAAahD,EDcduB,IACCA,EAAK0B,eACRvB,EAAoBwB,IAAI3B,EAAK4B,cAE7Bf,EAAUb,EAAK4B,gBAEfhB,GAAW,ICpBKnC,EDsBMuB,EAAKvB,MCrBpBd,EAAIe,IAAJ,iBAAkBD,EAAlB,YDqB2BI,MAAK,SAAAgD,GACtC1B,EAAoBwB,IAAIE,EAAE7C,MAE1B8C,EAAA,eACI9B,EADJ,CAEC4B,aAAcC,EAAE7C,KAChB0C,eAAe,KAGhBb,EAAUgB,EAAE7C,MAEZ4B,GAAW,UAIZ,CAACZ,EAAME,EAAcC,IA4BvB,yBAAK4B,UAAU,cAAcC,IAAKhC,EAAKvB,OACtC,yBAAKsD,UAAU,WACd,yBAAKE,IAAKjC,EAAKrB,WAAYuD,IAAKlC,EAAKvB,QACrC,4BAAKuB,EAAKvB,OACV,yBAAKsD,UAAU,WACd,6BACC,uCAAoB,IACpB,2BAAI/B,EAAKuB,OAEV,6BACC,sCAAmB,IACnB,2BAAIvB,EAAKmC,MAEV,6BACC,6CAA0B,IAC1B,2BAAInC,EAAKoC,aAIZ,yBAAKL,UAAU,qBACd,uBAAGA,UAAU,gBADd,oBAGEpB,EA2CA,yBAAKoB,UAAU,iBACd,uBAAGA,UAAU,4BA3Cf,6BACC,yBAAKA,UAAU,WACd,sCACA,6BACC,gDAA6B,IAC7B,2BAAI1B,EAAJ,WAED,6BACC,6CAA0B,IACzBI,EAAU4B,KAAI,SAAChB,EAAUiB,GAAX,OACd,uBAAGN,IAAKM,GACNjB,EAASE,KADX,KACmBF,EAASG,MAD5B,IACoC,SAItC,6BACC,iDAA8B,IAC9B,2BAAIjB,KAGLN,EAAM2B,aAAad,OACnBb,EAAM2B,aAAad,MAAMuB,KAAI,SAACnB,EAAMoB,GAAP,OAC5B,yBAAKN,IAAKM,EAAGP,UAAU,cACtB,yBAAKA,UAAU,SAASb,EAAKK,MAC7B,4BACC,4BACC,0CAAuB,IACvB,2BAAIL,EAAKH,KAAT,UAED,4BACC,4CAAyB,IACzB,2BAAIG,EAAKG,UAAY,WAEtB,4BACC,iDAA8B,IAC9B,2BAAIH,EAAKC,4BE3HJoB,MCAA,SAAwBxC,GAAQ,IACtCyC,EAAqBzC,EAArByC,WAAYtB,EAASnB,EAATmB,KAEpB,OACC,yBACCuB,QAAS,kBAAMD,EAAWtB,IAC1Ba,UAAU,mBAEV,yBAAKE,IAAKf,EAAKvC,WAAYuD,IAAKhB,EAAKzC,QACrC,yBAAKsD,UAAU,mBACd,8BAAOb,EAAKzC,OACZ,uBAAGsD,UAAU,0BCXFW,MCKA,WACd,IAAMC,EAAWC,mBADmB,EAGVxC,qBAHU,mBAG7ByC,EAH6B,KAGtBC,EAHsB,OAIN1C,oBAAS,GAJH,mBAI7BO,EAJ6B,KAIpBC,EAJoB,KAM5BV,EAAiB1C,IAAjB0C,aACAD,EAAUvC,IAAVuC,MAEFhC,EPUA,WACH,IAAIA,EAAgBC,aAAaC,QAAQ,iBAEzC,GAAIF,EACA,OAAOI,KAAKC,MAAML,GOdH6D,GAmBtB,SAASU,EAAWxC,GC7Bd,IAAavB,ED8BbuB,GC9BavB,EDmCFuB,EAAKvB,MClCZd,EAAIe,IAAJ,iBAAkBD,KDkCCI,MAAK,SAAAgD,GAAC,OAAI3B,EAAa6C,OAAOlB,EAAE7C,SAJ3DkB,EAAa6C,OAAO,MAOtB,SAASC,EAAsBhD,GAC9BE,EAAa6C,OAAO/C,GAGrB,OA9BAyB,qBAAU,WChBJ,IAAgBwB,EDiBjBJ,IACHjC,GAAW,IClBSqC,EDoBDJ,ECnBXlF,EAAIe,IAAJ,0BAA2BuE,KDmBTpE,MAAK,SAAAgD,GAC9B3B,EAAayB,IAAIE,EAAE7C,KAAK8B,OAExBF,GAAW,SAGX,CAACiC,EAAO3C,IAqBV,yBAAK6B,UAAU,aACd,yBAAKA,UAAU,WACb9B,EAAMiD,MAAMhC,KACZ,yBAAKa,UAAU,QACd,4BAAQU,QAAS,kBAAMD,EAAW,QACjC,uBAAGT,UAAU,sBACb,yCAED,+DAGA,yBAAKA,UAAU,oBACd,8DACA,yBAAKA,UAAU,QACd,2BAAOoB,KAAK,OAAOC,IAAKT,IACxB,4BACCF,QAnCR,WACC,IAAMY,EAAQV,EAASW,QACvBR,EAASO,EAAME,SAgCT,YAQF5C,EAUA,yBAAKoB,UAAU,iBACd,uBAAGA,UAAU,4BAVd9B,EAAMiD,MAAMhC,KAMX,kBAAC,EAAD,CAAMlB,KAAMC,EAAMiD,MAAMhC,OALzBjB,EAAMiD,MAAMpC,OACZb,EAAMiD,MAAMpC,MAAMuB,KAAI,SAACnB,EAAMoB,GAAP,OACrB,kBAAC,EAAD,CAAgBE,WAAYA,EAAYtB,KAAMA,EAAMc,IAAKM,QAW1DrC,EAAMiD,MAAMhC,MAAQjD,GACrB,yBAAK8D,UAAU,WACd,wDACC9D,EAAcoE,KAAI,SAACnB,EAAMoB,GAAP,OAClB,kBAAC,EAAD,CAAgBE,WAAYQ,EAAuB9B,KAAMA,EAAMc,IAAKM,WEjF5DkB,MANf,WACE,OACE,kBAAC,EAAD,OCMEC,EAAcC,QACW,cAA7BC,OAAOvB,SAASwB,UAEe,UAA7BD,OAAOvB,SAASwB,UAEhBD,OAAOvB,SAASwB,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTlF,MAAK,SAAAuF,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBrE,QACfgE,UAAUC,cAAcO,YAI1BC,QAAQC,IACN,iHAKEX,GAAUA,EAAOY,UACnBZ,EAAOY,SAASR,KAMlBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACnBb,EAAOa,UAAUT,WAO5BU,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,M,WChGpDC,EAAY,YACZC,EAAe,eAEftD,EAAM,SAAC3C,GAChB,MAAO,CACHmE,KAAM6B,EACNE,QAASlG,IAIJ+D,EAAS,SAAC/C,GACnB,MAAO,CACHmD,KAAM8B,EACNC,QAASlF,ICXXmF,EAAe,CACjBrE,MAAO,GACPI,KAAM,MCJGkE,EAAmB,mBACnBC,EAAsB,sBAEtB1D,EAAM,SAAC3C,GAChB,MAAO,CACHmE,KAAMiC,EACNF,QAASlG,IAIJ+D,EAAS,SAACuC,GACnB,MAAO,CACHnC,KAAMkC,EACNH,QAASI,ICXXH,EAAe,CACjBrE,MAAO,GACPI,KAAM,MCAKqE,cAAgB,CAC7BrC,MHEa,WAAyC,IAA/BjD,EAA8B,uDAAtBkF,EAAcK,EAAQ,uCACnD,OAAQA,EAAOrC,MACX,KAAK6B,EACD,OAAO,eAAK/E,EAAZ,GAAsB,CAAEa,MAAO0E,EAAON,UAC1C,KAAKD,EACD,OAAO,eAAKhF,EAAZ,GAAsB,CAAEiB,KAAMsE,EAAON,UACzC,QACI,OAAOjF,IGRjB2B,aDCa,WAAyC,IAA/B3B,EAA8B,uDAAtBkF,EAAcK,EAAQ,uCACnD,OAAQA,EAAOrC,MACX,KAAKiC,EACD,OAAO,eAAKnF,EAAZ,GAAsB,CAAEa,MAAO0E,EAAON,UAC1C,KAAKG,EACD,OAAO,eAAKpF,EAAZ,GAAsB,CAAEiB,KAAMsE,EAAON,UACzC,QACI,OAAOjF,MEHJwF,EAPK,SAAAC,GAClB,MAAO,CACLxF,aAAcyF,YAAmBzF,EAAcwF,GAC/CvF,oBAAqBwF,YAAmBxF,EAAqBuF,KCEjEE,IAASC,OACL,mBnBFyB,SAAA9F,GACzB,IAAMoF,EAAepF,EAAM+F,YAAY/F,EAAMgG,aAAc,CAAE5C,KAAM,aADjC,EAER6C,qBAAWjG,EAAM+F,YAAaX,GAFtB,mBAE3BlF,EAF2B,KAEpByF,EAFoB,KAG5BO,EAAUC,mBAAQ,kBAAMnG,EAAM0F,YAAYC,KAAW,CAAC3F,IACtDwD,EAAQ,CAAEtD,QAAOyF,YAEvB,OACI,kBAACnI,EAAa4I,SAAd,CAAuB5C,MAAOA,GAC1B,kBAAClG,EAAe8I,SAAhB,CAAyB5C,MAAO0C,GAC3BlG,EAAMqG,amBPnB,CAAeN,YAAaA,EAAaL,YAAaA,GAClD,kBAAC,EAAD,OAEFY,SAASC,eAAe,SPSvB,SAAkBtC,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIsC,IAAIC,4BAAwB7C,OAAOvB,SAASqE,MACpDC,SAAW/C,OAAOvB,SAASsE,OAIvC,OAGF/C,OAAOgD,iBAAiB,QAAQ,WAC9B,IAAM5C,EAAK,UAAMyC,4BAAN,sBAEP/C,IAgEV,SAAiCM,EAAOC,GAEtC4C,MAAM7C,EAAO,CACX8C,QAAS,CAAE,iBAAkB,YAE5BhI,MAAK,SAAAiI,GAEJ,IAAMC,EAAcD,EAASD,QAAQnI,IAAI,gBAEnB,MAApBoI,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5ChD,UAAUC,cAAcgD,MAAMrI,MAAK,SAAAuF,GACjCA,EAAa+C,aAAatI,MAAK,WAC7B8E,OAAOvB,SAASgF,eAKpBtD,EAAgBC,EAAOC,MAG1Bc,OAAM,WACLJ,QAAQC,IACN,oEAvFA0C,CAAwBtD,EAAOC,GAI/BC,UAAUC,cAAcgD,MAAMrI,MAAK,WACjC6F,QAAQC,IACN,iHAMJb,EAAgBC,EAAOC,OOhC/BE,K","file":"static/js/main.c5473a8d.chunk.js","sourcesContent":["import React, { useReducer, createContext, useContext, useMemo } from 'react'\r\n\r\nconst ActionsContext = createContext()\r\nconst StoreContext = createContext()\r\n\r\nexport const useActions = () => useContext(ActionsContext)\r\nexport const useStore = () => useContext(StoreContext)\r\n\r\nexport const StoreProvider = props => {\r\n    const initialState = props.rootReducer(props.initialValue, { type: '__INIT__' })\r\n    const [state, dispatch] = useReducer(props.rootReducer, initialState)\r\n    const actions = useMemo(() => props.rootActions(dispatch), [props])\r\n    const value = { state, dispatch }\r\n\r\n    return (\r\n        <StoreContext.Provider value={value}>\r\n            <ActionsContext.Provider value={actions}>\r\n                {props.children}\r\n            </ActionsContext.Provider>\r\n        </StoreContext.Provider>\r\n    )\r\n}","import axios from 'axios';\r\n \r\nconst api = axios.create({\r\n baseURL: 'https://api.github.com'\r\n})\r\n \r\nexport default api;","import api from \"../Api\";\r\n\r\nexport function put(search) {\r\n    let searchHistory = localStorage.getItem('searchHistory');\r\n\r\n    let searchHistoryArray = JSON.parse(searchHistory || \"[]\");\r\n\r\n    let searchItem = searchHistoryArray.find(s => s.login === search.login);\r\n\r\n    if (!searchItem) {\r\n        api.get(search.avatar_url, {\r\n            responseType: 'arraybuffer'\r\n        })\r\n            .then(function (result) {\r\n                search.avatar_url = _imageEncode(result.data);\r\n                searchHistoryArray.push(search);\r\n\r\n                if (searchHistoryArray.length > 3) {\r\n                    searchHistoryArray.splice(0, 1);\r\n                }\r\n\r\n                localStorage.setItem('searchHistory', JSON.stringify(searchHistoryArray));\r\n            });\r\n    }\r\n}\r\n\r\nexport function get() {\r\n    let searchHistory = localStorage.getItem('searchHistory');\r\n\r\n    if (searchHistory) {\r\n        return JSON.parse(searchHistory);\r\n    }\r\n}\r\n\r\nfunction _imageEncode(arrayBuffer) {\r\n    let b64encoded = btoa([].reduce.call(new Uint8Array(arrayBuffer), function (p, c) { return p + String.fromCharCode(c) }, ''))\r\n    let mimetype = \"image/jpeg\"\r\n    return \"data:\" + mimetype + \";base64,\" + b64encoded\r\n}","import User from './User';\r\n\r\nexport default User;","import React, { useEffect, useState } from \"react\";\r\nimport { useActions, useStore } from \"../../store\";\r\nimport * as repositoryService from \"../../services/RepositoryService\";\r\nimport * as searchHistoryService from \"../../services/SearchHistoryService\";\r\n\r\nexport default function User(props) {\r\n\tconst { user } = props;\r\n\tconst { state } = useStore();\r\n\tconst { usersActions, repositoriesActions } = useActions();\r\n\r\n\tconst [totalSize, setTotalSize] = useState(0);\r\n\tconst [totalIssues, setTotalIssues] = useState(0);\r\n\tconst [languages, setLanguages] = useState([]);\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (user) {\r\n\t\t\tif (user.isFromHistory) {\r\n\t\t\t\trepositoriesActions.set(user.repositories);\r\n\r\n\t\t\t\tsetTotals(user.repositories);\r\n\t\t\t} else {\r\n\t\t\t\tsetLoading(true);\r\n\r\n\t\t\t\trepositoryService.get(user.login).then(r => {\r\n\t\t\t\t\trepositoriesActions.set(r.data);\r\n\r\n\t\t\t\t\tsearchHistoryService.put({\r\n\t\t\t\t\t\t...user,\r\n\t\t\t\t\t\trepositories: r.data,\r\n\t\t\t\t\t\tisFromHistory: true\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tsetTotals(r.data);\r\n\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [user, usersActions, repositoriesActions]);\r\n\r\n\tfunction setTotals(items) {\r\n\t\tlet size = 0;\r\n\t\tlet issues = 0;\r\n\t\tlet languages = [];\r\n\r\n\t\titems.forEach(item => {\r\n\t\t\tsize += item.size;\r\n\t\t\tissues += item.open_issues_count;\r\n\r\n\t\t\tlet languageName = item.language || \"Outras\";\r\n\r\n\t\t\tlet language = languages.find(l => l.name === languageName);\r\n\r\n\t\t\tif (!language) {\r\n\t\t\t\tlanguages.push({ name: languageName, count: 1 });\r\n\t\t\t} else {\r\n\t\t\t\tlanguage.count += 1;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tsetTotalSize(size);\r\n\t\tsetTotalIssues(issues);\r\n\t\tsetLanguages(languages);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"user-detail\" key={user.login}>\r\n\t\t\t<div className=\"profile\">\r\n\t\t\t\t<img src={user.avatar_url} alt={user.login} />\r\n\t\t\t\t<h6>{user.login}</h6>\r\n\t\t\t\t<div className=\"summary\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<small>Nome</small>{\" \"}\r\n\t\t\t\t\t\t<b>{user.name}</b>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<small>Bio</small>{\" \"}\r\n\t\t\t\t\t\t<b>{user.bio}</b>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<small>Localidade</small>{\" \"}\r\n\t\t\t\t\t\t<b>{user.location}</b>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"user-repositories\">\r\n\t\t\t\t<i className=\"fas fa-list\"></i> Repositórios\r\n\t\t\t</div>\r\n\t\t\t{!loading ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"summary\">\r\n\t\t\t\t\t\t<h6>Resumo</h6>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<small>Tamanho Total</small>{\" \"}\r\n\t\t\t\t\t\t\t<b>{totalSize} bytes</b>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<small>Linguagens</small>{\" \"}\r\n\t\t\t\t\t\t\t{languages.map((language, i) => (\r\n\t\t\t\t\t\t\t\t<b key={i}>\r\n\t\t\t\t\t\t\t\t\t{language.name} ({language.count}){\" \"}\r\n\t\t\t\t\t\t\t\t</b>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<small>Issues Abertos</small>{\" \"}\r\n\t\t\t\t\t\t\t<b>{totalIssues}</b>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{state.repositories.items &&\r\n\t\t\t\t\t\tstate.repositories.items.map((item, i) => (\r\n\t\t\t\t\t\t\t<div key={i} className=\"repository\">\r\n\t\t\t\t\t\t\t\t<div className=\"title\">{item.name}</div>\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t<small>Tamanho</small>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t<b>{item.size}bytes</b>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t<small>Linguagem</small>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t<b>{item.language || \"Outras\"}</b>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t<small>Issues abertos</small>{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t<b>{item.open_issues_count}</b>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t\t<div className=\"table-loading\">\r\n\t\t\t\t\t\t<i className=\"fas fa-spinner fa-spin\"></i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import api from '../Api';\r\n\r\nexport function get(login) {\r\n    return api.get(`/users/${login}/repos`);\r\n}","import UserSearchItem from './UserSearchItem';\r\n\r\nexport default UserSearchItem;","import React from \"react\";\r\n\r\nexport default function UserSearchItem(props) {\r\n\tconst { selectUser, item } = props;\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tonClick={() => selectUser(item)}\r\n\t\t\tclassName=\"repository-item\"\r\n\t\t>\r\n\t\t\t<img src={item.avatar_url} alt={item.login} />\r\n\t\t\t<div className=\"repository-name\">\r\n\t\t\t\t<span>{item.login}</span>\r\n\t\t\t\t<i className=\"fas fa-arrow-right\"></i>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import UserSearch from './UserSearch';\r\n\r\nexport default UserSearch;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useActions, useStore } from \"../../store\";\r\nimport * as userService from \"../../services/UserService\";\r\nimport * as searchHistoryService from \"../../services/SearchHistoryService\";\r\nimport User from \"../User\";\r\nimport UserSearchItem from \"../UserSearchItem\";\r\n\r\nexport default function UserSearch() {\r\n\tconst inputRef = useRef();\r\n\r\n\tconst [query, setQuery] = useState();\r\n\tconst [loading, setLoading] = useState(false);\r\n\r\n\tconst { usersActions } = useActions();\r\n\tconst { state } = useStore();\r\n\r\n\tconst searchHistory = searchHistoryService.get();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (query) {\r\n\t\t\tsetLoading(true);\r\n\r\n\t\t\tuserService.search(query).then(r => {\r\n\t\t\t\tusersActions.set(r.data.items);\r\n\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t});\r\n\t\t}\r\n\t}, [query, usersActions]);\r\n\r\n\tfunction submitSearch() {\r\n\t\tconst input = inputRef.current;\r\n\t\tsetQuery(input.value);\r\n\t}\r\n\r\n\tfunction selectUser(user) {\r\n\t\tif (!user) {\r\n\t\t\tusersActions.select(null);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tuserService.get(user.login).then(r => usersActions.select(r.data));\r\n\t}\r\n\r\n\tfunction selectUserFromHistory(user) {\r\n\t\tusersActions.select(user);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"content\">\r\n\t\t\t\t{state.users.item ? (\r\n\t\t\t\t\t<div className=\"back\">\r\n\t\t\t\t\t\t<button onClick={() => selectUser(null)}>\r\n\t\t\t\t\t\t\t<i className=\"fas fa-arrow-left\"></i>\r\n\t\t\t\t\t\t\t<span>Voltar</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<h4>Busca de Usuários do GitHub</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className=\"search-container\">\r\n\t\t\t\t\t\t\t<h4>Busca de Usuários do GitHub</h4>\r\n\t\t\t\t\t\t\t<div className=\"form\">\r\n\t\t\t\t\t\t\t\t<input type=\"text\" ref={inputRef} />\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tonClick={submitSearch}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tBuscar\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t{!loading ? (\r\n\t\t\t\t\t!state.users.item ? (\r\n\t\t\t\t\t\tstate.users.items &&\r\n\t\t\t\t\t\tstate.users.items.map((item, i) => (\r\n\t\t\t\t\t\t\t<UserSearchItem selectUser={selectUser} item={item} key={i} />\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<User user={state.users.item} />\r\n\t\t\t\t\t\t)\r\n\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className=\"table-loading\">\r\n\t\t\t\t\t\t\t<i className=\"fas fa-spinner fa-spin\"></i>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t{!state.users.item && searchHistory && (\r\n\t\t\t\t\t<div className=\"history\">\r\n\t\t\t\t\t\t<h6>Visualizado Recentemente</h6>\r\n\t\t\t\t\t\t{searchHistory.map((item, i) => (\r\n\t\t\t\t\t\t\t<UserSearchItem selectUser={selectUserFromHistory} item={item} key={i} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}","import api from '../Api';\r\n\r\nexport function search(q) {\r\n    return api.get(`/search/users?q=${q}`);\r\n}\r\n\r\nexport function get(login) {\r\n    return api.get(`/users/${login}`);\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport UserSearch from './components/UserSearch';\r\n\r\nfunction App() {\r\n  return (\r\n    <UserSearch />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const USERS_SET = 'USERS_SET'\r\nexport const USERS_SELECT = 'USERS_SELECT'\r\n\r\nexport const set = (data) => {\r\n    return {\r\n        type: USERS_SET,\r\n        payload: data\r\n    };\r\n}\r\n\r\nexport const select = (user) => {\r\n    return {\r\n        type: USERS_SELECT,\r\n        payload: user\r\n    };\r\n}","import { USERS_SET, USERS_SELECT } from './actions'\r\n\r\nconst initialState = {\r\n    items: [],\r\n    item: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case USERS_SET:\r\n            return { ...state, ...{ items: action.payload } }\r\n        case USERS_SELECT:\r\n            return { ...state, ...{ item: action.payload } }\r\n        default:\r\n            return state\r\n    }\r\n}","export const REPOSITORIES_SET = 'REPOSITORIES_SET'\r\nexport const REPOSITORIES_SELECT = 'REPOSITORIES_SELECT'\r\n\r\nexport const set = (data) => {\r\n    return {\r\n        type: REPOSITORIES_SET,\r\n        payload: data\r\n    };\r\n}\r\n\r\nexport const select = (repository) => {\r\n    return {\r\n        type: REPOSITORIES_SELECT,\r\n        payload: repository\r\n    };\r\n}","import { REPOSITORIES_SET, REPOSITORIES_SELECT } from './actions'\r\n\r\nconst initialState = {\r\n    items: [],\r\n    item: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case REPOSITORIES_SET:\r\n            return { ...state, ...{ items: action.payload } }\r\n        case REPOSITORIES_SELECT:\r\n            return { ...state, ...{ item: action.payload } }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport usersReducer from './users/reducers'\r\nimport repositoriesReducer from './repositories/reducers'\r\n\r\nexport default combineReducers({\r\n  users: usersReducer,\r\n  repositories: repositoriesReducer\r\n})","import * as usersActions from '../store/users/actions'\r\nimport * as repositoriesActions from '../store/repositories/actions'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nconst rootActions = dispatch => {\r\n  return {\r\n    usersActions: bindActionCreators(usersActions, dispatch),\r\n    repositoriesActions: bindActionCreators(repositoriesActions, dispatch),\r\n  }\r\n}\r\n\r\nexport default rootActions","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { StoreProvider } from './store'\r\nimport rootReducer from './store/rootReducer'\r\nimport rootActions from './store/rootActions'\r\n\r\nReactDOM.render(\r\n    <StoreProvider rootReducer={rootReducer} rootActions={rootActions}>\r\n        <App />\r\n    </StoreProvider>\r\n    , document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}